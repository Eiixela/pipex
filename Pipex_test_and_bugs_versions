version 1 == pipex
version 2 == pipex_final

tests : 
1 -sans parametres
2 -avec trop de parametres
3 -outfile non existant
4 -outfile sans les droits 
5 -infile inexistant
6 -infile sans les droits
7 -"sleep 2" "sleep 1"
8 -"sleep 1" "sleep 2"
9 -command1 fausse + "sleep 1"
10 -command2 fausse + "sleep 1"
11 -command 1 == "grep ' '"
12 -command 2 == "grep ' '"
13 -"grep i" cat
14 -cat "grep i"

---> valgrind avec tous ces tests
---> tous ces tests avec env -i + valgrind sans path
---> tous ces tests avec env -i + valgrind avec path

Donc 26 test total si on les fais avec les valgrind

ok = comme bash
ko = pas comme bash
leaks = valgrind pas bon
n = nothing happened
sg = seg fault

version 1 :
//avec env
1 : ok ok 
2 : ok ok
3 : ok ok
4 : ok ok 
5 : ok ok
6 : ok ok
7 : ok ok
8 : ok ok
9 : ok ok
10 : ok ok
11 : ko ok
12 : ko ok
13 : ok ok
14 : ok ok
//sans env sans path
1 : ok ok
2 : ok ok
3 : ok ok
4 : ok ok
5 : ok ok
6 : ok ok
7 : ok ok
8 : ok ok
9 : ok ok
10 : ok ok
11 : ok ok
12 : ok ok
//sans env avec path
1 : ok ok
2 : ok ok
3 : ok ok
4 : ok ok
5 : ok ok
6 : ok ok
7 : ok ok
8 : ok ok
9 : ok ok
10 : ok ok
11 : ko ok
12 : ko ok
13 : ok ok
14 : ok ok

leak env -i /bin/valgrind --log-file=log --leak-check=full --show-leak-kinds=all --track-origins=yes --track-fds=yes ./pipex Makefile /bin/cat /bin/"grep i" out
env -i /bin/valgrind --log-file=log --leak-check=full --show-leak-kinds=all --trace-children=yes --track-fds=yes ./pipex Makefile /bin/"grep i" /bin/cat out